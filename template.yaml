AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Create a simple aip gateway that services access to s3 objects with lambda serving an s3 proxy mechanism

Parameters:

  EnableCloudWatchMonitoring:
    Type: String
    Description: >
      Flag to enable CloudWatch request metrics from S3 Object Lambda. This also creates CloudWatch alarms
      to monitor the request metrics.
    Default: false
    AllowedValues: [ true, false ]

  LambdaFunctionPayload:
    Type: String
    Default: empty
    Description: An optional static payload that provides supplemental data to the Lambda function used to transform objects.

Conditions:
  CustomPayload: !Not [!Equals [!Ref LambdaFunctionPayload, empty]]

Resources:

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-images
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-images
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Delete

BucketPolicy:
  Type: AWS::S3::BucketPolicy
  Properties:
    Bucket: !Ref Bucket
    PolicyDocument:
      Version: 2012-10-17
      Statement:
        - Action: '*'
          Effect: Allow
          Resource:
          - !GetAtt Bucket.Arn
          - !Sub
            - '${bucketARN}/*'
            - bucketARN: !GetAtt Bucket.Arn
          Principal:
            AWS: '*'
          Condition:
            StringEquals:
              's3:DataAccessPointAccount': !Sub ${AWS::AccountId}

  LambdaLogsGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-s3-proxy
      RetentionInDays: 90

  SupportingAccessPoint:
    Type: AWS::S3::AccessPoint
    Properties:
      Bucket: !Ref Bucket
      Name: !Sub ${AWS::StackName}-s3-ap

  ObjectLambdaAccessPoint:
    Type: AWS::S3ObjectLambda::AccessPoint
    Properties: 
      Name: wp-to-cloud-olap
      CloudWatchMetricsEnabled:
        Ref: EnableCloudWatchMonitoring
      ObjectLambdaConfiguration: 
        SupportingAccessPoint: !Sub 'arn:aws:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/${SupportingAccessPoint}'
        TransformationConfigurations: 
        - Actions: 
            - GetObject
          ContentTransformation: 
            AwsLambda:
              FunctionArn: !GetAtt LambdaFunction.Arn
              FunctionPayload: 
                !If
                  - CustomPayload
                  - Ref: LambdaFunctionPayload
                  - !Sub 


  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-s3-proxy
      Description: Receives https originated requests for s3 content and conditionally returns after applying authorization logic.
      Runtime: nodejs14.x
      Architectures: [ x86_64 ]
      Handler: Handler.GetAsset
      CodeUri: src/
      Timeout: 60
      Environment:
        Variables:
          S3_REGION: !Ref AWS::Region
          S3_BUCKET: !Ref Bucket
          EC2_HOSTNAME: 'TBD'
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - logs:*
              Resource: 
                - !GetAtt LambdaLogsGroup.Arn
            - Effect: Allow
              Action: 
                s3-object-lambda:WriteGetObjectResponse
              Resource:
                '*'

Outputs:

  AssetBucketName:
    Description: The name of the assets bucket
    Value: !Ref Bucket
